{const a={top:20,right:20,bottom:20,left:0},b=d3.selectAll("div#zig").append("svg").attr("class","svg").style("width",`${400+a.left+a.right}px`).style("height",`${200+a.top+a.bottom}px`).style("font","bold 12px sans-serif"),c=d3.tree().size([200,200]),d=d3.linkVertical().source(a=>[a.source.x,a.source.y+5]).target(a=>[a.target.x,a.target.y-12]),e=d3.hierarchy.prototype.constructor;let f=b.append("g").attr("fill","none").attr("stroke","#000").attr("transform","translate("+a.left+","+a.top+")").selectAll(".link"),g=b.append("g").attr("text-anchor","middle").attr("transform","translate("+a.left+","+a.top+")").selectAll(".node"),h=new e({type:"internal",value:"y"});h.depth=0;let i=new e({type:"internal",value:"x"});i.depth=1,i.parent=h;let j=new e({type:"external",value:"A"});j.depth=2,j.parent=i;let k=new e({type:"external",value:"B"});k.depth=2,k.parent=i;let l=new e({type:"external",value:"C"});l.depth=1,l.parent=h;h.children=[i,l],i.children=[j,k];c(h),g=g.data([h,i,j,k,l]),g=g.enter().append("text").text(a=>a.data.value).attr("x",a=>a.x).attr("y",a=>a.y).style("fill",a=>"external"===a.data.type?"gray":"black").merge(g),f=f.data([{source:h,target:i},{source:h,target:l},{source:i,target:j},{source:i,target:k}]),f=f.enter().insert("path",".node").attr("class","link").attr("d",d).merge(f);let m=200+a.left,n=b.append("g").attr("fill","none").attr("stroke","#000").attr("transform","translate("+m+","+a.top+")").selectAll(".linksplay"),o=b.append("g").attr("text-anchor","middle").attr("transform","translate("+m+","+a.top+")").selectAll(".nodesplay"),p=new e({type:"internal",value:"y"});p.depth=1;let q=new e({type:"internal",value:"x"});q.depth=0,p.parent=q;let r=new e({type:"external",value:"A"});r.depth=1,r.parent=q;let s=new e({type:"external",value:"B"});s.depth=2,s.parent=p;let t=new e({type:"external",value:"C"});t.depth=2,t.parent=p;p.children=[s,t],q.children=[r,p];c(q),o=o.data([p,q,r,s,t]),o=o.enter().append("text").text(a=>a.data.value).attr("x",a=>a.x).attr("y",a=>a.y).style("fill",a=>"external"===a.data.type?"gray":"black").merge(o),n=n.data([{source:q,target:p},{source:p,target:t},{source:q,target:r},{source:p,target:s}]),n=n.enter().insert("path",".nodesplay").attr("class","linksplay").attr("d",d).merge(n)}
